{"version":3,"sources":["webpack:///path---guides-components-cookbook-state-and-interactivity-a5cf55d75484d3781c07.js","webpack:///./.cache/json/guides-components-cookbook-state-and-interactivity.json"],"names":["webpackJsonp","368","module","exports","data","markdownRemark","htmlAst","type","children","tagName","properties","value","quirksMode","frontmatter","path","title","headings","timeToRead","wordCount","words","pathContext","sitemap","breadcrumbs"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,gBAAkBC,SAAWC,KAAA,OAAAC,WAA2BD,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,gKAAsLJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,6KAAmMJ,KAAA,OAAAI,MAAA,OAA6BJ,KAAA,UAAAE,QAAA,IAAAC,cAA8CF,WAAcD,KAAA,OAAAI,MAAA,wJAA4KP,MAAUQ,YAAA,IAAoBC,aAAgBC,KAAA,sDAAAC,MAAA,yBAA6FC,YAAAC,WAAA,EAAAC,WAA2CC,MAAA,MAAaC,aAAgBC,SAAWN,MAAA,wBAAAO,aAAA","file":"path---guides-components-cookbook-state-and-interactivity-a5cf55d75484d3781c07.js","sourcesContent":["webpackJsonp([64873405641005],{\n\n/***/ 368:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"markdownRemark\":{\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Currently, x-dash components must be stateless. There is no way for an x-dash component to respond to an event or other activity such as a network fetch.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"You can manually add your own event listeners to DOM nodes created by an x-dash component, but there is no way of managing the lifecycle of these or cleaning them up.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We're actively investigating ways to build x-dash components that change their state in response to events, and we'd like to hear your use cases.\"}]}],\"data\":{\"quirksMode\":false}},\"frontmatter\":{\"path\":\"/guides/components/cookbook/state-and-interactivity\",\"title\":\"State & Interactivity\"},\"headings\":[],\"timeToRead\":1,\"wordCount\":{\"words\":85}}},\"pathContext\":{\"sitemap\":{\"title\":\"State & Interactivity\",\"breadcrumbs\":[\"Guides\",\"Components\",\"Cookbook\",\"State And Interactivity\"]}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---guides-components-cookbook-state-and-interactivity-a5cf55d75484d3781c07.js","module.exports = {\"data\":{\"markdownRemark\":{\"htmlAst\":{\"type\":\"root\",\"children\":[{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"Currently, x-dash components must be stateless. There is no way for an x-dash component to respond to an event or other activity such as a network fetch.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"You can manually add your own event listeners to DOM nodes created by an x-dash component, but there is no way of managing the lifecycle of these or cleaning them up.\"}]},{\"type\":\"text\",\"value\":\"\\n\"},{\"type\":\"element\",\"tagName\":\"p\",\"properties\":{},\"children\":[{\"type\":\"text\",\"value\":\"We're actively investigating ways to build x-dash components that change their state in response to events, and we'd like to hear your use cases.\"}]}],\"data\":{\"quirksMode\":false}},\"frontmatter\":{\"path\":\"/guides/components/cookbook/state-and-interactivity\",\"title\":\"State & Interactivity\"},\"headings\":[],\"timeToRead\":1,\"wordCount\":{\"words\":85}}},\"pathContext\":{\"sitemap\":{\"title\":\"State & Interactivity\",\"breadcrumbs\":[\"Guides\",\"Components\",\"Cookbook\",\"State And Interactivity\"]}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/guides-components-cookbook-state-and-interactivity.json\n// module id = 368\n// module chunks = 64873405641005"],"sourceRoot":""}